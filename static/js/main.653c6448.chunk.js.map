{"version":3,"sources":["components/Header.js","components/loading.svg","components/Cards.js","components/Cryptos.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","transform","attributeName","type","repeatCount","dur","values","keyTimes","_ref","svgRef","title","props","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","ForwardRef","forwardRef","Cards","crypto","useState","isUp","price_change_percentage_24h","state","prices","sparkline_in_7d","price","data","labels","Array","datasets","backgroundColor","borderColor","pointRadius","pointHoverRadius","showLine","class","src","image","symbol","toUpperCase","name","substr","current_price","toLocaleString","currency","toFixed","price_change_24h","aria-hidden","options","legend","tooltips","enabled","scales","yAxes","gridLines","xAxes","responsive","maintainAspectRatio","Cryptos","cryptos","hasMore","page","setState","url","getCryptoData","a","result","fetch","responses","json","map","response","push","items","console","log","pageStart","loadMore","loader","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wJAWeA,EATA,WACX,OACI,yBAAKC,UAAU,0CACX,wBAAIA,UAAU,yCAAd,eACA,wBAAIA,UAAU,uCAAd,+E,yCCNZ,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAqB,IAAMC,cAAc,SAAU,CACrDC,GAAI,GACJC,GAAI,GACJC,KAAM,OACNC,OAAQ,UACRC,YAAa,EACbC,EAAG,GACHC,gBAAiB,uCACjBC,UAAW,yBACG,IAAMR,cAAc,mBAAoB,CACtDS,cAAe,YACfC,KAAM,SACNC,YAAa,aACbC,IAAK,KACLC,OAAQ,oBACRC,SAAU,SAGR,EAAa,SAAoBC,GACnC,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQ5B,EAAyByB,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMf,cAAc,MAAOxB,EAAS,CACtD2C,MAAO,CACLC,OAAQ,OACRC,WAAY,OACZC,QAAS,QACTC,eAAgB,QAElBC,MAAO,QACPC,OAAQ,QACRC,QAAS,cACTC,oBAAqB,WACrBC,IAAKZ,GACJE,GAAQD,EAAqB,IAAMjB,cAAc,QAAS,KAAMiB,GAAS,KAAMlB,IAGhF8B,EAAa,IAAMC,YAAW,SAAUZ,EAAOU,GACjD,OAAoB,IAAM5B,cAAc,EAAYxB,EAAS,CAC3DwC,OAAQY,GACPV,O,GAEU,I,wBC8BAa,EA9ED,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACAC,mBAAS,CAC/BC,KAAOF,EAAOG,6BAA+B,IAFvB,mBACnBC,EADmB,KAKpBC,GALoB,KAKXL,EAAOM,gBAAgBC,OAgChCC,EAAO,CACTC,OAAQC,MAAML,EAAOvD,QACrB6D,SAAU,CACR,CACEC,gBAAiB,qBACjBC,YAAa,qBACbC,YAAa,EACbC,iBAAkB,EAClB5C,MAAM,EACN6C,UAAU,EACVR,KAAMH,KAId,OACI,yBAAKY,MAAM,2CACP,yBAAK1E,UAAW,OAAO6D,EAAMF,KAAO,QAAU,OAAO,iBACjD,6BACI,yBAAK3D,UAAU,QACX,yBAAK2E,IAAKlB,EAAOmB,MAAO5E,UAAU,sBAClC,uBAAGA,UAAU,sEAAsEyD,EAAOoB,OAAOC,gBAErG,uBAAG9E,UAAU,yBAA0ByD,EAAOsB,KAAKxE,OAAS,GAAMkD,EAAOsB,KAAOtB,EAAOsB,KAAKC,OAAO,EAAG,IAAI,QAG9G,yBAAKhF,UAAU,yCACX,uBAAGA,UAAU,oCAAoCyD,EAAOwB,cAAcC,eAAe,QAAS,CAACtC,MAAO,WAAYuC,SAAU,SAC5H,yBAAKnF,UAAU,QACX,0BAAMA,UAAW,cAAc6D,EAAMF,KAAO,QAAU,OAAO,0BAA7D,IAAyFF,EAAOG,4BAA4BwB,QAAQ,GAApI,MACA,0BAAMpF,UAAW,cAAc6D,EAAMF,KAAO,QAAU,OAAO,0BAA2BF,EAAO4B,iBAAiBH,eAAe,QAAS,CAACtC,MAAO,WAAYuC,SAAU,QAAtK,IAA+K,uBAAGT,MAAO,iBAAiBb,EAAMF,KAAO,KAAO,QAAS2B,cAAY,aAK/P,6BACK,kBAAC,IAAD,CAAMrB,KAAMA,EAAMsB,QAjEf,CACZC,OAAQ,CACNzC,SAAS,GAEX0C,SAAU,CACRC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CACL,CACE7C,SAAS,EACTZ,KAAM,SACN0D,UAAW,CACT9C,SAAS,KAIf+C,MAAO,CACL,CACE/C,SAAS,EACT8C,UAAW,CACT9C,SAAS,MAKjBgD,YAAY,EACZC,qBAAqB,QCedC,EA/CC,WAAO,IAAD,EACOvC,mBAAS,CAC9BwC,QAAS,GACTC,SAAS,EACTC,KAAM,IAJQ,mBACZvC,EADY,KACLwC,EADK,KAOZC,EAAM,uHAAuHzC,EAAMuC,KAEnIG,EAAa,uCAAG,8BAAAC,EAAA,6DACdC,EAAS5C,EAAMqC,QADD,SAEIQ,MAAMJ,GAFV,cAEdK,EAFc,gBAGAA,EAAUC,OAHV,QAGlBD,EAHkB,QAKRE,KAAI,SAAAC,GAAQ,OAClBL,EAAOM,KAAKD,MAGhBT,EAAS,eACFxC,EADC,CAEJqC,QAASO,EACTL,KAAMvC,EAAMuC,KAAK,KAZH,2CAAH,qDAgBfY,EAAQ,GAMZ,OAJAnD,EAAMqC,QAAQW,KAAI,SAAApD,GAAM,OACpBuD,EAAMD,KAAK,kBAAC,EAAD,CAAOtD,OAAQA,QAE9BwD,QAAQC,IAAIrD,EAAMqC,SAEd,yBAAKlG,UAAU,OACf,kBAAC,IAAD,CACImH,UAAW,EACXC,SAAUb,EACVJ,QAAStC,EAAMsC,QACfkB,OAAQ,yBAAKrH,UAAU,iBAAgB,gCAAQ,kBAAC,EAAD,CAAkB4C,MAAO,CAACM,OAAQ,GAAID,MAAO,SAE5F,yBAAKjD,UAAU,0EACVgH,MC9BFM,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKtH,UAAU,yBACb,kBAAC,EAAD,SCGYuH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvB,QAAQuB,MAAMA,EAAMC,a","file":"static/js/main.653c6448.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"pt-8 pb-8 mb-8 text-center bg-gray-200\">\r\n            <h2 className=\"font-bold text-gray-800 text-5xl mb-2\">CryptoWatch</h2>\r\n            <h4 className=\"font-semibold text-gray-600 text-xl\">ðŸ“ˆ Displays the coins by market cap and the latest price change</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 50,\n  cy: 50,\n  fill: \"none\",\n  stroke: \"#85a2b6\",\n  strokeWidth: 3,\n  r: 35,\n  strokeDasharray: \"164.93361431346415 56.97787143782138\",\n  transform: \"rotate(11.7346 50 50)\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"0 50 50;360 50 50\",\n  keyTimes: \"0;1\"\n}));\n\nvar SvgLoading = function SvgLoading(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoading, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loading.501f14a3.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState} from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Cards = ({ crypto }) => {\r\n    const [state, setState] = useState({\r\n        isUp: (crypto.price_change_percentage_24h >= 0) ? true : false\r\n    })\r\n\r\n    const prices = crypto.sparkline_in_7d.price\r\n\r\n    const options = {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n              type: 'linear',\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      };\r\n\r\n    const data = {\r\n        labels: Array(prices.length),\r\n        datasets: [\r\n          {\r\n            backgroundColor: 'rgb(217, 236, 255)',\r\n            borderColor: 'rgb(118, 174, 226)',\r\n            pointRadius: 0,\r\n            pointHoverRadius: 0,\r\n            fill: true,\r\n            showLine: true,\r\n            data: prices\r\n          }\r\n        ]\r\n      };\r\n    return (\r\n        <div class=\"max-w rounded overflow-hidden shadow-lg\">\r\n            <div className={\"bg-\"+(state.isUp ? \"green\" : \"red\")+\"-300 p-5 flex\"}>\r\n                <div>\r\n                    <div className=\"flex\">\r\n                        <img src={crypto.image} className=\"w-8 h-8 mr-1 mt-2\" />\r\n                        <p className=\"text-gray-900 text-2xl md:text-3xl h-10 leading-lead font-semibold\">{crypto.symbol.toUpperCase()}</p>\r\n                    </div>\r\n                    <p className=\"text-gray-700 text-md\">{(crypto.name.length < 10) ? crypto.name : crypto.name.substr(0, 10)+'...'}</p>\r\n                </div>\r\n                \r\n                <div className=\"ml-auto text-gray-800 text-right mt-1\">\r\n                    <p className=\"text-2xl leading-tight font-bold\">{crypto.current_price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})}</p>\r\n                    <div className=\"mt-1\">\r\n                        <span className={\"ml-1 text-\"+(state.isUp ? \"green\" : \"red\")+\"-800 font-bold text-sm\"}>({crypto.price_change_percentage_24h.toFixed(2)}%)</span>\r\n                        <span className={\"ml-1 text-\"+(state.isUp ? \"green\" : \"red\")+\"-800 font-bold text-sm\"}>{crypto.price_change_24h.toLocaleString('en-US', {style: 'currency', currency: 'USD'})} <i class={\"fas fa-arrow-\"+(state.isUp ? \"up\" : \"down\")} aria-hidden=\"true\"></i></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {<Line data={data} options={options} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, {useEffect, useState} from 'react'\r\nimport { ReactComponent as LoadingAnimation} from '../components/loading.svg'\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Cards from './Cards'\r\n\r\nconst Cryptos = () => {\r\n    const[state, setState] = useState({\r\n        cryptos: [],\r\n        hasMore: true,\r\n        page: 1\r\n    })\r\n\r\n    const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&sparkline=true&per_page=8&page='+state.page\r\n\r\n    const getCryptoData = async () => {\r\n        let result = state.cryptos\r\n        let responses = await fetch(url)\r\n        responses = await responses.json()\r\n\r\n        responses.map(response => (\r\n            result.push(response)\r\n        ))\r\n        \r\n        setState({\r\n            ...state,\r\n            cryptos: result,\r\n            page: state.page+1\r\n        })\r\n    }\r\n\r\n    let items = []\r\n    \r\n    state.cryptos.map(crypto => \r\n        items.push(<Cards crypto={crypto}/>)\r\n    )\r\n    console.log(state.cryptos)\r\n    return(\r\n        <div className=\"p-4\">\r\n        <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={getCryptoData}\r\n            hasMore={state.hasMore}\r\n            loader={<div className=\"mx-auto mt-10\"><center><LoadingAnimation style={{height: 80, width: 80 }} /></center></div>}\r\n        >\r\n            <div className=\"grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-4\">\r\n                {items}\r\n            </div>\r\n        </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cryptos","import React from 'react';\r\nimport Header from './components/Header'\r\nimport Cryptos from './components/Cryptos'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container mx-auto m-4\">\r\n        <Cryptos />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}